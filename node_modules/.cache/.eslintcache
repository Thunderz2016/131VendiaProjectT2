[{"/Users/kananshah/Desktop/131VendiaProjectT2/131VendiaProjectT2/src/index.js":"1","/Users/kananshah/Desktop/131VendiaProjectT2/131VendiaProjectT2/src/App.js":"2","/Users/kananshah/Desktop/131VendiaProjectT2/131VendiaProjectT2/src/components/DarkModeToggle.js":"3","/Users/kananshah/Desktop/131VendiaProjectT2/131VendiaProjectT2/src/firebase.js":"4","/Users/kananshah/Desktop/131VendiaProjectT2/131VendiaProjectT2/src/components/register.js":"5","/Users/kananshah/Desktop/131VendiaProjectT2/131VendiaProjectT2/src/components/login.js":"6","/Users/kananshah/Desktop/131VendiaProjectT2/131VendiaProjectT2/src/components/AuthDetails.js":"7","/Users/kananshah/Desktop/131VendiaProjectT2/131VendiaProjectT2/src/vendiaClient.js":"8","/Users/kananshah/Desktop/131VendiaProjectT2/131VendiaProjectT2/src/components/Dashboard.js":"9","/Users/kananshah/Desktop/131VendiaProjectT2/131VendiaProjectT2/src/page-device/DeviceOne.js":"10","/Users/kananshah/Desktop/131VendiaProjectT2/131VendiaProjectT2/src/page-device/DeviceTwo.js":"11","/Users/kananshah/Desktop/131VendiaProjectT2/131VendiaProjectT2/src/page-device/DeviceFour.js":"12","/Users/kananshah/Desktop/131VendiaProjectT2/131VendiaProjectT2/src/page-device/DeviceThree.js":"13","/Users/kananshah/Documents/GitHub/131VendiaProjectT2/src/index.js":"14","/Users/kananshah/Documents/GitHub/131VendiaProjectT2/src/App.js":"15","/Users/kananshah/Documents/GitHub/131VendiaProjectT2/src/components/DarkModeToggle.js":"16","/Users/kananshah/Documents/GitHub/131VendiaProjectT2/src/components/register.js":"17","/Users/kananshah/Documents/GitHub/131VendiaProjectT2/src/components/login.js":"18","/Users/kananshah/Documents/GitHub/131VendiaProjectT2/src/components/Dashboard.js":"19","/Users/kananshah/Documents/GitHub/131VendiaProjectT2/src/firebase.js":"20","/Users/kananshah/Documents/GitHub/131VendiaProjectT2/src/page-device/DeviceFour.js":"21","/Users/kananshah/Documents/GitHub/131VendiaProjectT2/src/page-device/DeviceTwo.js":"22","/Users/kananshah/Documents/GitHub/131VendiaProjectT2/src/page-device/DeviceThree.js":"23","/Users/kananshah/Documents/GitHub/131VendiaProjectT2/src/page-device/DeviceOne.js":"24","/Users/kananshah/Documents/GitHub/131VendiaProjectT2/src/vendiaClient.js":"25","/Users/kananshah/Documents/GitHub/131VendiaProjectT2/src/components/AuthDetails.js":"26"},{"size":493,"mtime":1697433321690,"results":"27","hashOfConfig":"28"},{"size":2023,"mtime":1697433432747,"results":"29","hashOfConfig":"28"},{"size":546,"mtime":1697433432747,"results":"30","hashOfConfig":"28"},{"size":914,"mtime":1696878660670,"results":"31","hashOfConfig":"28"},{"size":3236,"mtime":1697433321690,"results":"32","hashOfConfig":"28"},{"size":3697,"mtime":1697433634648,"results":"33","hashOfConfig":"28"},{"size":465,"mtime":1697433432747,"results":"34","hashOfConfig":"28"},{"size":315,"mtime":1696878660670,"results":"35","hashOfConfig":"28"},{"size":2030,"mtime":1697433432747,"results":"36","hashOfConfig":"28"},{"size":5898,"mtime":1697433432748,"results":"37","hashOfConfig":"28"},{"size":5892,"mtime":1697433432748,"results":"38","hashOfConfig":"28"},{"size":5893,"mtime":1697433432748,"results":"39","hashOfConfig":"28"},{"size":5898,"mtime":1697433432748,"results":"40","hashOfConfig":"28"},{"size":493,"mtime":1697439185349,"results":"41","hashOfConfig":"42"},{"size":2023,"mtime":1697441555642,"results":"43","hashOfConfig":"42"},{"size":546,"mtime":1697441555642,"results":"44","hashOfConfig":"42"},{"size":3236,"mtime":1697441555642,"results":"45","hashOfConfig":"42"},{"size":3697,"mtime":1697441555642,"results":"46","hashOfConfig":"42"},{"size":2030,"mtime":1697441555642,"results":"47","hashOfConfig":"42"},{"size":914,"mtime":1697439185349,"results":"48","hashOfConfig":"42"},{"size":5893,"mtime":1697441555642,"results":"49","hashOfConfig":"42"},{"size":5892,"mtime":1697441555643,"results":"50","hashOfConfig":"42"},{"size":5898,"mtime":1697441555643,"results":"51","hashOfConfig":"42"},{"size":5898,"mtime":1697441555643,"results":"52","hashOfConfig":"42"},{"size":315,"mtime":1697439185350,"results":"53","hashOfConfig":"42"},{"size":465,"mtime":1697441555642,"results":"54","hashOfConfig":"42"},{"filePath":"55","messages":"56","suppressedMessages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},"1x07nk4",{"filePath":"59","messages":"60","suppressedMessages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"62","messages":"63","suppressedMessages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"58"},{"filePath":"66","messages":"67","suppressedMessages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"58"},{"filePath":"70","messages":"71","suppressedMessages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"73","messages":"74","suppressedMessages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","suppressedMessages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"58"},{"filePath":"80","messages":"81","suppressedMessages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"83","messages":"84","suppressedMessages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"58"},{"filePath":"87","messages":"88","suppressedMessages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"58"},{"filePath":"91","messages":"92","suppressedMessages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"58"},{"filePath":"95","messages":"96","suppressedMessages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"58"},{"filePath":"99","messages":"100","suppressedMessages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"58"},{"filePath":"103","messages":"104","suppressedMessages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1wcqmvc",{"filePath":"106","messages":"107","suppressedMessages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"109","messages":"110","suppressedMessages":"111","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"112","messages":"113","suppressedMessages":"114","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"115","messages":"116","suppressedMessages":"117","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"118","messages":"119","suppressedMessages":"120","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"121","messages":"122","suppressedMessages":"123","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"124","messages":"125","suppressedMessages":"126","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"127","messages":"128","suppressedMessages":"129","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"130","messages":"131","suppressedMessages":"132","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"133","messages":"134","suppressedMessages":"135","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"136","messages":"137","suppressedMessages":"138","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"139","messages":"140","suppressedMessages":"141","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/kananshah/Desktop/131VendiaProjectT2/131VendiaProjectT2/src/index.js",[],[],[],"/Users/kananshah/Desktop/131VendiaProjectT2/131VendiaProjectT2/src/App.js",[],[],"/Users/kananshah/Desktop/131VendiaProjectT2/131VendiaProjectT2/src/components/DarkModeToggle.js",["142"],[],"import { IconButton } from \"@chakra-ui/react\";\nimport { useColorMode } from \"@chakra-ui/react\";\nimport { Switch } from \"@chakra-ui/react\";\n\n\nfunction DarkModeToggle() {\n  const { colorMode, toggleColorMode } = useColorMode()\n  return (\n    <Switch\n      isChecked={colorMode === 'dark'}\n      onChange={toggleColorMode}\n      size=\"lg\"\n      colorScheme=\"red\" // You can choose a color scheme that suits your design\n      position=\"fixed\"\n      bottom=\"4\"\n      left=\"4\"\n    >\n      Dark Mode\n    </Switch>\n  )\n}\n\n \nexport default DarkModeToggle;","/Users/kananshah/Desktop/131VendiaProjectT2/131VendiaProjectT2/src/firebase.js",["143","144"],[],"// Import the functions you need from the SDKs you need\nimport { initializeApp } from \"firebase/app\";\nimport { getAuth } from \"firebase/auth\";\nimport firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport AuthDetails from \"./components/AuthDetails\";\n\n// TODO: Add SDKs for Firebase products that you want to use\n// https://firebase.google.com/docs/web/setup#available-libraries\n\n// Your web app's Firebase configuration\nconst firebaseConfig = {\n  apiKey: \"AIzaSyCf5aYNEUafpBd64vPxsn3A9bEKlr-G7IQ\",\n  authDomain: \"fire-test-be742.firebaseapp.com\",\n  projectId: \"fire-test-be742\",\n  storageBucket: \"fire-test-be742.appspot.com\",\n  messagingSenderId: \"808774097027\",\n  appId: \"1:808774097027:web:f33547fd0b133338a923b6\"\n};\n\n// Initialize Firebase\nconst app = initializeApp(firebaseConfig);\n\n// Initialize Firebase Authentication and get a reference to the service\n\nconst auth = getAuth(app);\n\nexport { auth };\n\n","/Users/kananshah/Desktop/131VendiaProjectT2/131VendiaProjectT2/src/components/register.js",[],[],"/Users/kananshah/Desktop/131VendiaProjectT2/131VendiaProjectT2/src/components/login.js",[],[],"/Users/kananshah/Desktop/131VendiaProjectT2/131VendiaProjectT2/src/components/AuthDetails.js",["145","146","147","148"],[],"import { onAuthStateChanged, signOut } from \"firebase/auth\";\nimport React, { useEffect, useState } from \"react\";\nimport { auth } from \"../firebase\";\n\nexport const AuthDetails = () => {\n  const [authUser, setAuthUser] = useState(null);\n\n  useEffect(() => {\n    const listen = onAuthStateChanged(auth, (user) => {\n      if (user) {\n        setAuthUser(user);\n      } else {\n        setAuthUser(null);\n      }\n    });\n  }, []);\n\n};\n\nexport default onAuthStateChanged;\n","/Users/kananshah/Desktop/131VendiaProjectT2/131VendiaProjectT2/src/vendiaClient.js",[],[],"/Users/kananshah/Desktop/131VendiaProjectT2/131VendiaProjectT2/src/components/Dashboard.js",["149","150"],[],"import { Center, Flex, Heading, Link, Stack, Box } from \"@chakra-ui/react\";\nimport React from \"react\";\nimport { Link as RouterLink, useNavigate } from \"react-router-dom\";\n\nfunction Dashboard() {\n  const navigate = useNavigate();\n  const basicBoxStyles = {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    textAlign: 'center',\n    boxSize: '250px',\n    fontWeight: 'bold',\n    fontSize: '20px',\n    px: 4,\n    borderRadius: 'lg', // Use \"borderRadius\" to control the curvature\n    p:'4',\n    borderWidth: '2px',// Adjust padding as needed\n    borderColor: 'blue',\n    width: '400px',\n    height: \"300px\",\n  }\n\n  return ( <Center height=\"100vh\">\n    <Stack align=\"center\">\n        <Flex flexWrap='wrap' gap='24px' justifyContent='space-evenly'>\n            {/* Box 1 */}\n            <Box sx={basicBoxStyles} filter='grayscale(5%)' \n            direction=\"column\" justify=\"space-between\" height=\"100%\">\n            <Link\n            maxW=\"400px\"\n            p=\"70\"\n            color=\"red\" href=\"#\" as={RouterLink} to=\"/DeviceOne\">\n            DeviceOne\n            </Link>\n            </Box>\n\n            {/* Box 2 */}\n            <Box sx={basicBoxStyles} filter='grayscale(5%)'>\n            <Link maxW=\"400px\"\n            p=\"70\"\n            color=\"orange\" href=\"#\" as={RouterLink} to=\"/DeviceTwo\">\n            DeviceTwo\n            </Link>\n            </Box>\n\n            {/* Box 3 */}\n            <Box sx={basicBoxStyles} filter='grayscale(5%)'>\n            <Link maxW=\"400px\"\n            p=\"70\"\n            color=\"blue\" href=\"#\" as={RouterLink} to=\"/DeviceThree\">\n            DeviceThree\n            </Link>\n            </Box>\n\n            {/* Box 4 */}\n            <Box sx={basicBoxStyles} filter='grayscale(5%)'>\n            <Link maxW=\"400px\"\n            p=\"70\"\n            color=\"green\" href=\"#\" as={RouterLink} to=\"/DeviceFour\">\n            DeviceFour\n            </Link>\n            </Box>\n        </Flex>\n    \n    </Stack>\n\n</Center>\n          \n        )\n      }\n\n  export default Dashboard;","/Users/kananshah/Desktop/131VendiaProjectT2/131VendiaProjectT2/src/page-device/DeviceOne.js",["151","152"],[],"import React, { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useNavigate } from \"react-router-dom\";\nimport { onAuthStateChanged, signOut } from \"firebase/auth\";\nimport { auth } from \"../firebase\";\nimport { Input, Button, Text, Box, Stack, } from \"@chakra-ui/react\";\nimport { vendiaClient } from \"../vendiaClient\";\n\nconst { client } = vendiaClient();\n\nexport const DeviceOne = () => {\n  const [device, setDevice] = useState(\"\");\n  const [testID, setTestID] = useState(\"\");\n  const [orgAssignment, setOrgAssignment] = useState(\"\");\n  const [testName, setTestName] = useState(\"\");\n  const [testMethod, setTestMethod] = useState(\"\");\n  const [notes, setNotes] = useState(\"\");\n  const [completed, setCompleted] = useState(false);\n  const [testList, setTestList] = useState([]);\n  const [updatedBy, setUpdatedBy] = useState(\"\");\n  const [authUser, setAuthUser] = useState(null);\n  const [searchQuery, setSearchQuery] = useState(\"\");\n  const [filteredTests, setFilteredTests] = useState([]);\n\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    // List all the Test\n    const listTest = async () => {\n      const listTestResponse = await client.entities.test.list();\n      console.log(listTestResponse?.items);\n      setTestList(listTestResponse?.items);\n    };\n\n    listTest();\n  }, []);\n\n  useEffect(() => {\n    onAuthStateChanged(auth, (user) => {\n      setAuthUser(user); // Set the user object when the authentication state changes\n    });\n  }, []);\n\n  const addDevice = async () => {\n    // Add a new product\n    const addDeviceResponse = await client.entities.test.add({\n      Device: device,\n      TestID: parseInt(testID),\n      OrgAssignment: orgAssignment,\n      TestName: testName,\n      TestMethod: testMethod,\n      Notes: notes,\n      Completed: Boolean(completed),\n      UpdatedBy: updatedBy,\n    });\n    console.log(addDeviceResponse);\n  };\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    addDevice();\n  };\n\n  const userSignOut = () => {\n    signOut(auth)\n      .then(() => {\n        console.log(\"sign out successful\");\n        navigate(\"/login\");\n      })\n      .catch((error) => console.log(error));\n  };\n\n  const filterTests = () => {\n    const lowerSearchQuery = searchQuery.toLowerCase();\n    const filtered = testList.filter((test) => {\n      return (\n        test.TestName.toLowerCase().includes(lowerSearchQuery) ||\n        test.OrgAssignment.toLowerCase().includes(lowerSearchQuery)\n      );\n    });\n    setFilteredTests(filtered);\n  };\n\n  return (\n    \n    <Stack spacing={4}>\n      <Text fontSize=\"xl\">DeviceOne Page</Text>\n\n      {/* Search box */}\n      <Input htmlSize={5} width='200px'\n        placeholder=\"Search...\"\n        value={searchQuery}\n        onChange={(e) => setSearchQuery(e.target.value)}\n      />\n\n      <Box borderWidth=\"1px\" borderRadius=\"lg\" overflow=\"hidden\">\n        {filteredTests.map((item, index) => (\n          <Box key={index} p={4} borderBottomWidth=\"1px\">\n            <Text>{`TestID: ${item.TestID}`}</Text>\n            <Text>{`Device: ${item.Device}`}</Text>\n            <Text>{`OrgAssignment: ${item.OrgAssignment}`}</Text>\n            <Text>{`TestName: ${item.TestName}`}</Text>\n            <Text>{`TestMethod: ${item.TestMethod}`}</Text>\n            <Text>{`Notes: ${item.Notes}`}</Text>\n            <Text>{`Completed: ${item.Completed}`}</Text>\n            <Text>{`UpdatedBy: ${item.UpdatedBy}`}</Text>\n          </Box>\n        ))}\n      </Box>\n\n      <form onSubmit={handleSubmit}>\n        <Stack spacing={4} direction=\"column\" align=\"center\" justify=\"center\">\n          <Input\n            placeholder=\"Device\"\n            value={device}\n            onChange={(e) => setDevice(e.target.value)}\n            size=\"md\"\n            width=\"500px\"\n            textAlign=\"center\"\n          />\n          <Input\n            placeholder=\"TestID\"\n            value={testID}\n            onChange={(e) => setTestID(e.target.value)}\n            size=\"md\"\n            width=\"500px\"\n            textAlign=\"center\"\n          />\n          <Input\n            placeholder=\"OrgAssignment\"\n            value={orgAssignment}\n            onChange={(e) => setOrgAssignment(e.target.value)}\n            size=\"md\"\n            width=\"500px\"\n            textAlign=\"center\"\n          />\n          <Input\n            placeholder=\"TestName\"\n            value={testName}\n            onChange={(e) => setTestName(e.target.value)}\n            size=\"md\"\n            width=\"500px\"\n            textAlign=\"center\"\n          />\n          <Input\n            placeholder=\"TestMethod\"\n            value={testMethod}\n            onChange={(e) => setTestMethod(e.target.value)}\n            size=\"md\"\n            width=\"500px\"\n            textAlign=\"center\"\n          />\n          <Input\n            placeholder=\"Notes\"\n            value={notes}\n            onChange={(e) => setNotes(e.target.value)}\n            size=\"md\"\n            width=\"500px\"\n            textAlign=\"center\"\n          />\n          <Input\n            placeholder=\"Completed\"\n            value={completed}\n            onChange={(e) => setCompleted(e.target.value)}\n            size=\"md\"\n            width=\"500px\"\n            textAlign=\"center\"\n          />\n          <Input\n            placeholder=\"UpdatedBy\"\n            value={updatedBy}\n            onChange={(e) => setUpdatedBy(e.target.value)}\n            size=\"md\"\n            width=\"500px\"\n            textAlign=\"center\"\n          />\n          <Button colorScheme=\"blue\" type=\"submit\">\n            Add Device\n          </Button>\n        </Stack>\n      </form>\n\n      {authUser ? (\n        <>\n          <Text>{`Signed In as ${authUser.email}`}</Text>\n          <Button colorScheme=\"red\" onClick={userSignOut} >\n            Sign Out\n          </Button>\n        </> \n          ) : ( \n          <Text textAlign=\"center\">Signed Out</Text>\n      )}\n    </Stack>\n  );\n};\n\nexport default DeviceOne;","/Users/kananshah/Desktop/131VendiaProjectT2/131VendiaProjectT2/src/page-device/DeviceTwo.js",["153","154"],[],"import React, { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useNavigate } from \"react-router-dom\";\nimport { onAuthStateChanged, signOut } from \"firebase/auth\";\nimport { auth } from \"../firebase\";\nimport { Input, Button, Text, Box, Stack, } from \"@chakra-ui/react\";\nimport { vendiaClient } from \"../vendiaClient\";\n\nconst { client } = vendiaClient();\n\nexport const DeviceTwo = () => {\n  const [device, setDevice] = useState(\"\");\n  const [testID, setTestID] = useState(\"\");\n  const [orgAssignment, setOrgAssignment] = useState(\"\");\n  const [testName, setTestName] = useState(\"\");\n  const [testMethod, setTestMethod] = useState(\"\");\n  const [notes, setNotes] = useState(\"\");\n  const [completed, setCompleted] = useState(false);\n  const [testList, setTestList] = useState([]);\n  const [updatedBy, setUpdatedBy] = useState(\"\");\n  const [authUser, setAuthUser] = useState(null);\n  const [searchQuery, setSearchQuery] = useState(\"\");\n  const [filteredTests, setFilteredTests] = useState([]);\n\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    // List all the Test\n    const listTest = async () => {\n      const listTestResponse = await client.entities.test.list();\n      console.log(listTestResponse?.items);\n      setTestList(listTestResponse?.items);\n    };\n\n    listTest();\n  }, []);\n\n  useEffect(() => {\n    onAuthStateChanged(auth, (user) => {\n      setAuthUser(user); // Set the user object when the authentication state changes\n    });\n  }, []);\n\n  const addDevice = async () => {\n    // Add a new product\n    const addDeviceResponse = await client.entities.test.add({\n      Device: device,\n      TestID: parseInt(testID),\n      OrgAssignment: orgAssignment,\n      TestName: testName,\n      TestMethod: testMethod,\n      Notes: notes,\n      Completed: Boolean(completed),\n      UpdatedBy: updatedBy,\n    });\n    console.log(addDeviceResponse);\n  };\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    addDevice();\n  };\n\n  const userSignOut = () => {\n    signOut(auth)\n      .then(() => {\n        console.log(\"sign out successful\");\n        navigate(\"/login\");\n      })\n      .catch((error) => console.log(error));\n  };\n\n  const filterTests = () => {\n    const lowerSearchQuery = searchQuery.toLowerCase();\n    const filtered = testList.filter((test) => {\n      return (\n        test.TestName.toLowerCase().includes(lowerSearchQuery) ||\n        test.OrgAssignment.toLowerCase().includes(lowerSearchQuery)\n      );\n    });\n    setFilteredTests(filtered);\n  };\n\n  return (\n    <Stack spacing={4}>\n      <Text fontSize=\"xl\">DeviceTwo Page</Text>\n\n      {/* Search box */}\n      <Input htmlSize={5} width='200px'\n        placeholder=\"Search...\"\n        value={searchQuery}\n        onChange={(e) => setSearchQuery(e.target.value)}\n      />\n\n      <Box borderWidth=\"1px\" borderRadius=\"lg\" overflow=\"hidden\">\n        {filteredTests.map((item, index) => (\n          <Box key={index} p={4} borderBottomWidth=\"1px\">\n            <Text>{`TestID: ${item.TestID}`}</Text>\n            <Text>{`Device: ${item.Device}`}</Text>\n            <Text>{`OrgAssignment: ${item.OrgAssignment}`}</Text>\n            <Text>{`TestName: ${item.TestName}`}</Text>\n            <Text>{`TestMethod: ${item.TestMethod}`}</Text>\n            <Text>{`Notes: ${item.Notes}`}</Text>\n            <Text>{`Completed: ${item.Completed}`}</Text>\n            <Text>{`UpdatedBy: ${item.UpdatedBy}`}</Text>\n          </Box>\n        ))}\n      </Box>\n\n      <form onSubmit={handleSubmit}>\n        <Stack spacing={4} direction=\"column\" align=\"center\" justify=\"center\">\n          <Input\n            placeholder=\"Device\"\n            value={device}\n            onChange={(e) => setDevice(e.target.value)}\n            size=\"md\"\n            width=\"500px\"\n            textAlign=\"center\"\n          />\n          <Input\n            placeholder=\"TestID\"\n            value={testID}\n            onChange={(e) => setTestID(e.target.value)}\n            size=\"md\"\n            width=\"500px\"\n            textAlign=\"center\"\n          />\n          <Input\n            placeholder=\"OrgAssignment\"\n            value={orgAssignment}\n            onChange={(e) => setOrgAssignment(e.target.value)}\n            size=\"md\"\n            width=\"500px\"\n            textAlign=\"center\"\n          />\n          <Input\n            placeholder=\"TestName\"\n            value={testName}\n            onChange={(e) => setTestName(e.target.value)}\n            size=\"md\"\n            width=\"500px\"\n            textAlign=\"center\"\n          />\n          <Input\n            placeholder=\"TestMethod\"\n            value={testMethod}\n            onChange={(e) => setTestMethod(e.target.value)}\n            size=\"md\"\n            width=\"500px\"\n            textAlign=\"center\"\n          />\n          <Input\n            placeholder=\"Notes\"\n            value={notes}\n            onChange={(e) => setNotes(e.target.value)}\n            size=\"md\"\n            width=\"500px\"\n            textAlign=\"center\"\n          />\n          <Input\n            placeholder=\"Completed\"\n            value={completed}\n            onChange={(e) => setCompleted(e.target.value)}\n            size=\"md\"\n            width=\"500px\"\n            textAlign=\"center\"\n          />\n          <Input\n            placeholder=\"UpdatedBy\"\n            value={updatedBy}\n            onChange={(e) => setUpdatedBy(e.target.value)}\n            size=\"md\"\n            width=\"500px\"\n            textAlign=\"center\"\n          />\n          <Button colorScheme=\"blue\" type=\"submit\">\n            Add Device\n          </Button>\n        </Stack>\n      </form>\n\n      {authUser ? (\n        <>\n          <Text>{`Signed In as ${authUser.email}`}</Text>\n          <Button colorScheme=\"red\" onClick={userSignOut}>\n            Sign Out\n          </Button>\n        </> \n          ) : ( \n          <Text textAlign=\"center\">Signed Out</Text>\n      )}\n    </Stack>\n  );\n};\n\nexport default DeviceTwo;","/Users/kananshah/Desktop/131VendiaProjectT2/131VendiaProjectT2/src/page-device/DeviceFour.js",["155","156"],[],"import React, { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useNavigate } from \"react-router-dom\";\nimport { onAuthStateChanged, signOut } from \"firebase/auth\";\nimport { auth } from \"../firebase\";\nimport { Input, Button, Text, Box, Stack, } from \"@chakra-ui/react\";\nimport { vendiaClient } from \"../vendiaClient\";\n\nconst { client } = vendiaClient();\n\nexport const DeviceFour = () => {\n  const [device, setDevice] = useState(\"\");\n  const [testID, setTestID] = useState(\"\");\n  const [orgAssignment, setOrgAssignment] = useState(\"\");\n  const [testName, setTestName] = useState(\"\");\n  const [testMethod, setTestMethod] = useState(\"\");\n  const [notes, setNotes] = useState(\"\");\n  const [completed, setCompleted] = useState(false);\n  const [testList, setTestList] = useState([]);\n  const [updatedBy, setUpdatedBy] = useState(\"\");\n  const [authUser, setAuthUser] = useState(null);\n  const [searchQuery, setSearchQuery] = useState(\"\");\n  const [filteredTests, setFilteredTests] = useState([]);\n\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    // List all the Test\n    const listTest = async () => {\n      const listTestResponse = await client.entities.test.list();\n      console.log(listTestResponse?.items);\n      setTestList(listTestResponse?.items);\n    };\n\n    listTest();\n  }, []);\n\n  useEffect(() => {\n    onAuthStateChanged(auth, (user) => {\n      setAuthUser(user); // Set the user object when the authentication state changes\n    });\n  }, []);\n\n  const addDevice = async () => {\n    // Add a new product\n    const addDeviceResponse = await client.entities.test.add({\n      Device: device,\n      TestID: parseInt(testID),\n      OrgAssignment: orgAssignment,\n      TestName: testName,\n      TestMethod: testMethod,\n      Notes: notes,\n      Completed: Boolean(completed),\n      UpdatedBy: updatedBy,\n    });\n    console.log(addDeviceResponse);\n  };\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    addDevice();\n  };\n\n  const userSignOut = () => {\n    signOut(auth)\n      .then(() => {\n        console.log(\"sign out successful\");\n        navigate(\"/login\");\n      })\n      .catch((error) => console.log(error));\n  };\n\n  const filterTests = () => {\n    const lowerSearchQuery = searchQuery.toLowerCase();\n    const filtered = testList.filter((test) => {\n      return (\n        test.TestName.toLowerCase().includes(lowerSearchQuery) ||\n        test.OrgAssignment.toLowerCase().includes(lowerSearchQuery)\n      );\n    });\n    setFilteredTests(filtered);\n  };\n\n  return (\n    <Stack spacing={4}>\n      <Text fontSize=\"xl\">DeviceFour Page</Text>\n\n      {/* Search box */}\n      <Input htmlSize={5} width='200px'\n        placeholder=\"Search...\"\n        value={searchQuery}\n        onChange={(e) => setSearchQuery(e.target.value)}\n      />\n\n      <Box borderWidth=\"1px\" borderRadius=\"lg\" overflow=\"hidden\">\n        {filteredTests.map((item, index) => (\n          <Box key={index} p={4} borderBottomWidth=\"1px\">\n            <Text>{`TestID: ${item.TestID}`}</Text>\n            <Text>{`Device: ${item.Device}`}</Text>\n            <Text>{`OrgAssignment: ${item.OrgAssignment}`}</Text>\n            <Text>{`TestName: ${item.TestName}`}</Text>\n            <Text>{`TestMethod: ${item.TestMethod}`}</Text>\n            <Text>{`Notes: ${item.Notes}`}</Text>\n            <Text>{`Completed: ${item.Completed}`}</Text>\n            <Text>{`UpdatedBy: ${item.UpdatedBy}`}</Text>\n          </Box>\n        ))}\n      </Box>\n\n      <form onSubmit={handleSubmit}>\n        <Stack spacing={4} direction=\"column\" align=\"center\" justify=\"center\">\n          <Input\n            placeholder=\"Device\"\n            value={device}\n            onChange={(e) => setDevice(e.target.value)}\n            size=\"md\"\n            width=\"500px\"\n            textAlign=\"center\"\n          />\n          <Input\n            placeholder=\"TestID\"\n            value={testID}\n            onChange={(e) => setTestID(e.target.value)}\n            size=\"md\"\n            width=\"500px\"\n            textAlign=\"center\"\n          />\n          <Input\n            placeholder=\"OrgAssignment\"\n            value={orgAssignment}\n            onChange={(e) => setOrgAssignment(e.target.value)}\n            size=\"md\"\n            width=\"500px\"\n            textAlign=\"center\"\n          />\n          <Input\n            placeholder=\"TestName\"\n            value={testName}\n            onChange={(e) => setTestName(e.target.value)}\n            size=\"md\"\n            width=\"500px\"\n            textAlign=\"center\"\n          />\n          <Input\n            placeholder=\"TestMethod\"\n            value={testMethod}\n            onChange={(e) => setTestMethod(e.target.value)}\n            size=\"md\"\n            width=\"500px\"\n            textAlign=\"center\"\n          />\n          <Input\n            placeholder=\"Notes\"\n            value={notes}\n            onChange={(e) => setNotes(e.target.value)}\n            size=\"md\"\n            width=\"500px\"\n            textAlign=\"center\"\n          />\n          <Input\n            placeholder=\"Completed\"\n            value={completed}\n            onChange={(e) => setCompleted(e.target.value)}\n            size=\"md\"\n            width=\"500px\"\n            textAlign=\"center\"\n          />\n          <Input\n            placeholder=\"UpdatedBy\"\n            value={updatedBy}\n            onChange={(e) => setUpdatedBy(e.target.value)}\n            size=\"md\"\n            width=\"500px\"\n            textAlign=\"center\"\n          />\n          <Button colorScheme=\"blue\" type=\"submit\">\n            Add Device\n          </Button>\n        </Stack>\n      </form>\n\n      {authUser ? (\n        <>\n          <Text>{`Signed In as ${authUser.email}`}</Text>\n          <Button colorScheme=\"red\" onClick={userSignOut}>\n            Sign Out\n          </Button>\n        </> \n          ) : ( \n          <Text textAlign=\"center\">Signed Out</Text>\n      )}\n    </Stack>\n  )\n}\n\nexport default DeviceFour;","/Users/kananshah/Desktop/131VendiaProjectT2/131VendiaProjectT2/src/page-device/DeviceThree.js",["157","158"],[],"import React, { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useNavigate } from \"react-router-dom\";\nimport { onAuthStateChanged, signOut } from \"firebase/auth\";\nimport { auth } from \"../firebase\";\nimport { Input, Button, Text, Box, Stack, } from \"@chakra-ui/react\";\nimport { vendiaClient } from \"../vendiaClient\";\n\nconst { client } = vendiaClient();\n\nexport const DeviceThree = () => {\n  const [device, setDevice] = useState(\"\");\n  const [testID, setTestID] = useState(\"\");\n  const [orgAssignment, setOrgAssignment] = useState(\"\");\n  const [testName, setTestName] = useState(\"\");\n  const [testMethod, setTestMethod] = useState(\"\");\n  const [notes, setNotes] = useState(\"\");\n  const [completed, setCompleted] = useState(false);\n  const [testList, setTestList] = useState([]);\n  const [updatedBy, setUpdatedBy] = useState(\"\");\n  const [authUser, setAuthUser] = useState(null);\n  const [searchQuery, setSearchQuery] = useState(\"\");\n  const [filteredTests, setFilteredTests] = useState([]);\n\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    // List all the Test\n    const listTest = async () => {\n      const listTestResponse = await client.entities.test.list();\n      console.log(listTestResponse?.items);\n      setTestList(listTestResponse?.items);\n    };\n\n    listTest();\n  }, []);\n\n  useEffect(() => {\n    onAuthStateChanged(auth, (user) => {\n      setAuthUser(user); // Set the user object when the authentication state changes\n    });\n  }, []);\n\n  const addDevice = async () => {\n    // Add a new product\n    const addDeviceResponse = await client.entities.test.add({\n      Device: device,\n      TestID: parseInt(testID),\n      OrgAssignment: orgAssignment,\n      TestName: testName,\n      TestMethod: testMethod,\n      Notes: notes,\n      Completed: Boolean(completed),\n      UpdatedBy: updatedBy,\n    });\n    console.log(addDeviceResponse);\n  };\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    addDevice();\n  };\n\n  const userSignOut = () => {\n    signOut(auth)\n      .then(() => {\n        console.log(\"sign out successful\");\n        navigate(\"/login\");\n      })\n      .catch((error) => console.log(error));\n  };\n\n  const filterTests = () => {\n    const lowerSearchQuery = searchQuery.toLowerCase();\n    const filtered = testList.filter((test) => {\n      return (\n        test.TestName.toLowerCase().includes(lowerSearchQuery) ||\n        test.OrgAssignment.toLowerCase().includes(lowerSearchQuery)\n      );\n    });\n    setFilteredTests(filtered);\n  };\n\n  return (\n    <Stack spacing={4}>\n      <Text fontSize=\"xl\">DeviceThree Page</Text>\n\n      {/* Search box */}\n      <Input htmlSize={5} width='200px'\n        placeholder=\"Search...\"\n        value={searchQuery}\n        onChange={(e) => setSearchQuery(e.target.value)}\n      />\n\n      <Box borderWidth=\"1px\" borderRadius=\"lg\" overflow=\"hidden\">\n        {filteredTests.map((item, index) => (\n          <Box key={index} p={4} borderBottomWidth=\"1px\">\n            <Text>{`TestID: ${item.TestID}`}</Text>\n            <Text>{`Device: ${item.Device}`}</Text>\n            <Text>{`OrgAssignment: ${item.OrgAssignment}`}</Text>\n            <Text>{`TestName: ${item.TestName}`}</Text>\n            <Text>{`TestMethod: ${item.TestMethod}`}</Text>\n            <Text>{`Notes: ${item.Notes}`}</Text>\n            <Text>{`Completed: ${item.Completed}`}</Text>\n            <Text>{`UpdatedBy: ${item.UpdatedBy}`}</Text>\n          </Box>\n        ))}\n      </Box>\n\n      <form onSubmit={handleSubmit}>\n        <Stack spacing={4} direction=\"column\" align=\"center\" justify=\"center\">\n          <Input\n            placeholder=\"Device\"\n            value={device}\n            onChange={(e) => setDevice(e.target.value)}\n            size=\"md\"\n            width=\"500px\"\n            textAlign=\"center\"\n          />\n          <Input\n            placeholder=\"TestID\"\n            value={testID}\n            onChange={(e) => setTestID(e.target.value)}\n            size=\"md\"\n            width=\"500px\"\n            textAlign=\"center\"\n          />\n          <Input\n            placeholder=\"OrgAssignment\"\n            value={orgAssignment}\n            onChange={(e) => setOrgAssignment(e.target.value)}\n            size=\"md\"\n            width=\"500px\"\n            textAlign=\"center\"\n          />\n          <Input\n            placeholder=\"TestName\"\n            value={testName}\n            onChange={(e) => setTestName(e.target.value)}\n            size=\"md\"\n            width=\"500px\"\n            textAlign=\"center\"\n          />\n          <Input\n            placeholder=\"TestMethod\"\n            value={testMethod}\n            onChange={(e) => setTestMethod(e.target.value)}\n            size=\"md\"\n            width=\"500px\"\n            textAlign=\"center\"\n          />\n          <Input\n            placeholder=\"Notes\"\n            value={notes}\n            onChange={(e) => setNotes(e.target.value)}\n            size=\"md\"\n            width=\"500px\"\n            textAlign=\"center\"\n          />\n          <Input\n            placeholder=\"Completed\"\n            value={completed}\n            onChange={(e) => setCompleted(e.target.value)}\n            size=\"md\"\n            width=\"500px\"\n            textAlign=\"center\"\n          />\n          <Input\n            placeholder=\"UpdatedBy\"\n            value={updatedBy}\n            onChange={(e) => setUpdatedBy(e.target.value)}\n            size=\"md\"\n            width=\"500px\"\n            textAlign=\"center\"\n          />\n          <Button colorScheme=\"blue\" type=\"submit\">\n            Add Device\n          </Button>\n        </Stack>\n      </form>\n\n      {authUser ? (\n        <>\n          <Text>{`Signed In as ${authUser.email}`}</Text>\n          <Button colorScheme=\"red\" onClick={userSignOut}>\n            Sign Out\n          </Button>\n        </> \n          ) : ( \n          <Text textAlign=\"center\">Signed Out</Text>\n      )}\n    </Stack>\n  );\n};\n\nexport default DeviceThree;","/Users/kananshah/Documents/GitHub/131VendiaProjectT2/src/index.js",[],[],"/Users/kananshah/Documents/GitHub/131VendiaProjectT2/src/App.js",[],[],"/Users/kananshah/Documents/GitHub/131VendiaProjectT2/src/components/DarkModeToggle.js",["159"],[],"/Users/kananshah/Documents/GitHub/131VendiaProjectT2/src/components/register.js",[],[],"/Users/kananshah/Documents/GitHub/131VendiaProjectT2/src/components/login.js",[],[],"/Users/kananshah/Documents/GitHub/131VendiaProjectT2/src/components/Dashboard.js",["160","161"],[],"/Users/kananshah/Documents/GitHub/131VendiaProjectT2/src/firebase.js",["162","163"],[],"/Users/kananshah/Documents/GitHub/131VendiaProjectT2/src/page-device/DeviceFour.js",["164","165"],[],"/Users/kananshah/Documents/GitHub/131VendiaProjectT2/src/page-device/DeviceTwo.js",["166","167"],[],"/Users/kananshah/Documents/GitHub/131VendiaProjectT2/src/page-device/DeviceThree.js",["168","169"],[],"/Users/kananshah/Documents/GitHub/131VendiaProjectT2/src/page-device/DeviceOne.js",["170","171"],[],"/Users/kananshah/Documents/GitHub/131VendiaProjectT2/src/vendiaClient.js",[],[],"/Users/kananshah/Documents/GitHub/131VendiaProjectT2/src/components/AuthDetails.js",["172","173","174","175"],[],{"ruleId":"176","severity":1,"message":"177","line":1,"column":10,"nodeType":"178","messageId":"179","endLine":1,"endColumn":20},{"ruleId":"176","severity":1,"message":"180","line":4,"column":8,"nodeType":"178","messageId":"179","endLine":4,"endColumn":16},{"ruleId":"176","severity":1,"message":"181","line":6,"column":8,"nodeType":"178","messageId":"179","endLine":6,"endColumn":19},{"ruleId":"176","severity":1,"message":"182","line":1,"column":30,"nodeType":"178","messageId":"179","endLine":1,"endColumn":37},{"ruleId":"176","severity":1,"message":"183","line":2,"column":8,"nodeType":"178","messageId":"179","endLine":2,"endColumn":13},{"ruleId":"176","severity":1,"message":"184","line":6,"column":10,"nodeType":"178","messageId":"179","endLine":6,"endColumn":18},{"ruleId":"176","severity":1,"message":"185","line":9,"column":11,"nodeType":"178","messageId":"179","endLine":9,"endColumn":17},{"ruleId":"176","severity":1,"message":"186","line":1,"column":24,"nodeType":"178","messageId":"179","endLine":1,"endColumn":31},{"ruleId":"176","severity":1,"message":"187","line":6,"column":9,"nodeType":"178","messageId":"179","endLine":6,"endColumn":17},{"ruleId":"176","severity":1,"message":"188","line":2,"column":10,"nodeType":"178","messageId":"179","endLine":2,"endColumn":14},{"ruleId":"176","severity":1,"message":"189","line":73,"column":9,"nodeType":"178","messageId":"179","endLine":73,"endColumn":20},{"ruleId":"176","severity":1,"message":"188","line":2,"column":10,"nodeType":"178","messageId":"179","endLine":2,"endColumn":14},{"ruleId":"176","severity":1,"message":"189","line":73,"column":9,"nodeType":"178","messageId":"179","endLine":73,"endColumn":20},{"ruleId":"176","severity":1,"message":"188","line":2,"column":10,"nodeType":"178","messageId":"179","endLine":2,"endColumn":14},{"ruleId":"176","severity":1,"message":"189","line":73,"column":9,"nodeType":"178","messageId":"179","endLine":73,"endColumn":20},{"ruleId":"176","severity":1,"message":"188","line":2,"column":10,"nodeType":"178","messageId":"179","endLine":2,"endColumn":14},{"ruleId":"176","severity":1,"message":"189","line":73,"column":9,"nodeType":"178","messageId":"179","endLine":73,"endColumn":20},{"ruleId":"176","severity":1,"message":"177","line":1,"column":10,"nodeType":"178","messageId":"179","endLine":1,"endColumn":20},{"ruleId":"176","severity":1,"message":"186","line":1,"column":24,"nodeType":"178","messageId":"179","endLine":1,"endColumn":31},{"ruleId":"176","severity":1,"message":"187","line":6,"column":9,"nodeType":"178","messageId":"179","endLine":6,"endColumn":17},{"ruleId":"176","severity":1,"message":"180","line":4,"column":8,"nodeType":"178","messageId":"179","endLine":4,"endColumn":16},{"ruleId":"176","severity":1,"message":"181","line":6,"column":8,"nodeType":"178","messageId":"179","endLine":6,"endColumn":19},{"ruleId":"176","severity":1,"message":"188","line":2,"column":10,"nodeType":"178","messageId":"179","endLine":2,"endColumn":14},{"ruleId":"176","severity":1,"message":"189","line":73,"column":9,"nodeType":"178","messageId":"179","endLine":73,"endColumn":20},{"ruleId":"176","severity":1,"message":"188","line":2,"column":10,"nodeType":"178","messageId":"179","endLine":2,"endColumn":14},{"ruleId":"176","severity":1,"message":"189","line":73,"column":9,"nodeType":"178","messageId":"179","endLine":73,"endColumn":20},{"ruleId":"176","severity":1,"message":"188","line":2,"column":10,"nodeType":"178","messageId":"179","endLine":2,"endColumn":14},{"ruleId":"176","severity":1,"message":"189","line":73,"column":9,"nodeType":"178","messageId":"179","endLine":73,"endColumn":20},{"ruleId":"176","severity":1,"message":"188","line":2,"column":10,"nodeType":"178","messageId":"179","endLine":2,"endColumn":14},{"ruleId":"176","severity":1,"message":"189","line":73,"column":9,"nodeType":"178","messageId":"179","endLine":73,"endColumn":20},{"ruleId":"176","severity":1,"message":"182","line":1,"column":30,"nodeType":"178","messageId":"179","endLine":1,"endColumn":37},{"ruleId":"176","severity":1,"message":"183","line":2,"column":8,"nodeType":"178","messageId":"179","endLine":2,"endColumn":13},{"ruleId":"176","severity":1,"message":"184","line":6,"column":10,"nodeType":"178","messageId":"179","endLine":6,"endColumn":18},{"ruleId":"176","severity":1,"message":"185","line":9,"column":11,"nodeType":"178","messageId":"179","endLine":9,"endColumn":17},"no-unused-vars","'IconButton' is defined but never used.","Identifier","unusedVar","'firebase' is defined but never used.","'AuthDetails' is defined but never used.","'signOut' is defined but never used.","'React' is defined but never used.","'authUser' is assigned a value but never used.","'listen' is assigned a value but never used.","'Heading' is defined but never used.","'navigate' is assigned a value but never used.","'Link' is defined but never used.","'filterTests' is assigned a value but never used."]